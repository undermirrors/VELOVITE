services:
  db:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: velovite
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - velovite_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d velovite -U username"]
      interval: 10s
      timeout: 5s
      retries: 5

  front:
    build: ./front
    container_name: front
    ports:
      - "4173:4173"
    depends_on:
      - back
    networks:
      - velovite_network

  back:
    build: ./back
    container_name: back
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://username:password@db:5432/velovite
      - BACKEND_PARAM=${BACKEND_PARAM:--m}
    networks:
      - velovite_network
    volumes:
      - ./back/merged_data/:/usr/src/velovite-back/merged_data/
      - ./back/merged_data_mock/:/usr/src/velovite-back/merged_data_mock/

volumes:
  postgres_data:

networks:
  velovite_network: